#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define FILE_DIDNT_OPEN_ERROR (-1)
#define MAX_LINE (1024) // u linuxu 4096
#define MAX_FILE_NAME (256)

int countStudentsFromFile(char* filename);

int main(void)
{
  char filename[MAX_FILE_NAME] = {0};
  printf("Insert filename > ");
  scanf(" %s", filename);
  printf("Broj studenata u datoteci %s je %d", )
  
  
  
  
  return 0;  
}

int countStudentsFromFile(char* filename)
{
  FILE* fp = NULL;
  int count = 0;
  char buffer[] = {0};
  
  fp = fopen(filename, "r");
  if (fp == NULL)
  {
    printf("Dear customer, the file %s didn't open!\r\n",filename);
    return FILE_DIDNT_OPEN_ERROR;
  }
  
  while(!feof(fp)) { //while not found end of file (EOF)
    fgets(buffer, MAX_LINE, fp);
    
    if (strcmp("\n",buffer) != 0){
      count++;
    }
  
  }
  
  fclose(fp);
  return count;
}








|RAM|
CODE(read only)
STACK
CONST.(read only)
HEAP

pokazivac - varijabla koja sadrzi adresu druge varijable
kraj stringa - 0
kraj datoteke - EOF (vrijednost 255 ili -1)
\n - line feed
\r - carriage return 

koristi typedef, dinamicku alokaciju memorije, malloc(rezervira memoriju), calloc(postavi na 0),fscanf,oslobodit memoriju
